class Node{constructor(t){this.left=null,this.data=t,this.right=null,this.parent=null}}class SplayTree{constructor(){this.root=null}add(e){var l=new Node(e);if(null==this.root)this.root=l;else{let t=this.root,r=null;for(;null!=t;)t=e<(r=t).data?t.left:t.right;e<r.data?r.left=l:r.right=l,l.parent=r,this.splay(e)}}splay(t){let r=this.#find(t);if(null==r)console.log("Element not found");else{for(;null!=r.parent;){var e,l;r=null==r.parent.parent?r.parent.left==r?this.#right_rotation(r.parent):this.#left_rotation(r.parent):(l=(e=r.parent).parent,r==e.left&&e==l.left?(this.#right_rotation(l),this.#right_rotation(e)):r==e.right&&e==l.right?(this.#left_rotation(l),this.#left_rotation(e)):r==e.right&&e==l.left?(this.#left_rotation(e),this.#right_rotation(l)):(this.#right_rotation(e),this.#left_rotation(l)))}this.root=r}}#right_rotation(t){var r=t.left;return r.parent=t.parent,null!=r.right&&(r.right.parent=t),t.left=r.right,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.right=t).parent=r}#left_rotation(t){var r=t.right;return r.parent=t.parent,null!=r.left&&(r.left.parent=t),t.right=r.left,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.left=t).parent=r}#insert_node(r,e){if(null!=r){let t=null;for(;null!=e;)t=e,e=r.data<e.data?e.left:e.right;r.data<t.data?t.left=r:t.right=r,r.parent=t}}#inorder_traversal(t){null!=t&&(this.#inorder_traversal(t.left),console.log(t.data,t.parent),this.#inorder_traversal(t.right))}inorder(){this.#inorder_traversal(this.root)}#find(t){let r=this.root;for(;null!=r;){if(t==r.data)return r;r=t<r.data?r.left:r.right}return null}}let tree=new SplayTree;tree.add(10),tree.add(7),tree.add(15),tree.add(1),tree.add(9),tree.inorder();class Node{constructor(t){this.left=null,this.data=t,this.right=null,this.parent=null}}class SplayTree{constructor(){this.root=null}add(e){var l=new Node(e);if(null==this.root)this.root=l;else{let t=this.root,r=null;for(;null!=t;)t=e<(r=t).data?t.left:t.right;e<r.data?r.left=l:r.right=l,l.parent=r,this.splay(e)}}splay(t){let r=this.#find(t);if(null==r)console.log("Element not found");else{for(;null!=r.parent;){var e,l;r=null==r.parent.parent?r.parent.left==r?this.#right_rotation(r.parent):this.#left_rotation(r.parent):(l=(e=r.parent).parent,r==e.left&&e==l.left?(this.#right_rotation(l),this.#right_rotation(e)):r==e.right&&e==l.right?(this.#left_rotation(l),this.#left_rotation(e)):r==e.right&&e==l.left?(this.#left_rotation(e),this.#right_rotation(l)):(this.#right_rotation(e),this.#left_rotation(l)))}this.root=r}}#right_rotation(t){var r=t.left;return r.parent=t.parent,null!=r.right&&(r.right.parent=t),t.left=r.right,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.right=t).parent=r}#left_rotation(t){var r=t.right;return r.parent=t.parent,null!=r.left&&(r.left.parent=t),t.right=r.left,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.left=t).parent=r}#insert_node(r,e){if(null!=r){let t=null;for(;null!=e;)t=e,e=r.data<e.data?e.left:e.right;r.data<t.data?t.left=r:t.right=r,r.parent=t}}#inorder_traversal(t){null!=t&&(this.#inorder_traversal(t.left),console.log(t.data,t.parent),this.#inorder_traversal(t.right))}inorder(){this.#inorder_traversal(this.root)}#find(t){let r=this.root;for(;null!=r;){if(t==r.data)return r;r=t<r.data?r.left:r.right}return null}}let tree=new SplayTree;tree.add(10),tree.add(7),tree.add(15),tree.add(1),tree.add(9),tree.inorder();class Node{constructor(t){this.left=null,this.data=t,this.right=null,this.parent=null}}class SplayTree{constructor(){this.root=null}add(e){var l=new Node(e);if(null==this.root)this.root=l;else{let t=this.root,r=null;for(;null!=t;)t=e<(r=t).data?t.left:t.right;e<r.data?r.left=l:r.right=l,l.parent=r,this.splay(e)}}splay(t){let r=this.#find(t);if(null==r)console.log("Element not found");else{for(;null!=r.parent;){var e,l;r=null==r.parent.parent?r.parent.left==r?this.#right_rotation(r.parent):this.#left_rotation(r.parent):(l=(e=r.parent).parent,r==e.left&&e==l.left?(this.#right_rotation(l),this.#right_rotation(e)):r==e.right&&e==l.right?(this.#left_rotation(l),this.#left_rotation(e)):r==e.right&&e==l.left?(this.#left_rotation(e),this.#right_rotation(l)):(this.#right_rotation(e),this.#left_rotation(l)))}this.root=r}}#right_rotation(t){var r=t.left;return r.parent=t.parent,null!=r.right&&(r.right.parent=t),t.left=r.right,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.right=t).parent=r}#left_rotation(t){var r=t.right;return r.parent=t.parent,null!=r.left&&(r.left.parent=t),t.right=r.left,null==t.parent?this.root=r:t==t.parent.left?t.parent.left=r:t.parent.right=r,(r.left=t).parent=r}#insert_node(r,e){if(null!=r){let t=null;for(;null!=e;)t=e,e=r.data<e.data?e.left:e.right;r.data<t.data?t.left=r:t.right=r,r.parent=t}}#inorder_traversal(t){null!=t&&(this.#inorder_traversal(t.left),console.log(t.data,t.parent),this.#inorder_traversal(t.right))}inorder(){this.#inorder_traversal(this.root)}#find(t){let r=this.root;for(;null!=r;){if(t==r.data)return r;r=t<r.data?r.left:r.right}return null}}let tree=new SplayTree;tree.add(10),tree.add(7),tree.add(15),tree.add(1),tree.add(9),tree.inorder();